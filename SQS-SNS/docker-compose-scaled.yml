services:
  customersapi:
    image: customersapi
    build:
      context: ./
      dockerfile: ./CustomersApi/Dockerfile
    ports:
      - 5000:5000
    volumes:
      - ${AWS_CREDENTIALS_LOCATION}:/home/sqssnsuser/.aws:ro
  customersnotificationservice:
    image: customersnotificationservice
    build:
      context: ./
      dockerfile: ./CustomersNotificationsService/Dockerfile
    ports:
      - 5001:5001
    volumes:
      - ${AWS_CREDENTIALS_LOCATION}:/home/sqssnsuser/.aws:ro
    environment:
      - APP_PORT=5001
  customersnotificationservice-2:
    image: customersnotificationservice
    build:
      context: ./
      dockerfile: ./CustomersNotificationsService/Dockerfile
    ports:
      - 5002:5002
    volumes:
      - ${AWS_CREDENTIALS_LOCATION}:/home/sqssnsuser/.aws:ro
    environment:
      - APP_PORT=5002
  customersnotificationservice-3:
    image: customersnotificationservice
    build:
      context: ./
      dockerfile: ./CustomersNotificationsService/Dockerfile
    ports:
      - 5003:5003
    volumes:
      - ${AWS_CREDENTIALS_LOCATION}:/home/sqssnsuser/.aws:ro
    environment:
      - APP_PORT=5003
  customersengagementtrackingservice:
    image: customersengagementtrackingservice
    build:
      context: ./
      dockerfile: ./CustomersEngagementTrackingService/Dockerfile
    ports:
      - 5011:5011   
    volumes:
      - ${AWS_CREDENTIALS_LOCATION}:/home/sqssnsuser/.aws:ro 
    environment:
      - APP_PORT=50011
  customersengagementtrackingservice-2:
    image: customersengagementtrackingservice
    build:
      context: ./
      dockerfile: ./CustomersEngagementTrackingService/Dockerfile
    ports:
      - 5012:5012  
    volumes:
      - ${AWS_CREDENTIALS_LOCATION}:/home/sqssnsuser/.aws:ro
    environment:
      - APP_PORT=50012
  customersengagementtrackingservice-3:
    image: customersengagementtrackingservice
    build:
      context: ./
      dockerfile: ./CustomersEngagementTrackingService/Dockerfile
    ports:
      - 5013:5013    
    volumes:
      - ${AWS_CREDENTIALS_LOCATION}:/home/sqssnsuser/.aws:ro    
    environment:
      - APP_PORT=50013
  postgres:
    image: postgres:latest
    ports:
      - 5432:5432
    volumes:
      - postgres_data_sqs:/var/lib/postgresql/data
      - ./DatabaseScripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
  mailhog:
    image: mailhog/mailhog
    logging:
      driver: 'none'
    ports:
      - 1025:1025
      - 8025:8025
volumes:
  postgres_data_sqs: